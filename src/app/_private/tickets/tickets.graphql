query GetTickets(
  $limit: Int
  $offset: Int
  $condition: tickets_bool_exp! = {}
  $orderBy: [tickets_order_by!] = { created_at: desc }
) {
  tickets(
    where: $condition
    limit: $limit
    offset: $offset
    order_by: $orderBy
  ) {
    ...TicketFields
  }
  tickets_aggregate(where: $condition) {
    aggregate {
      count
    }
  }
}

mutation InsertTicket($input: tickets_insert_input!) {
  insert_tickets_one(object: $input) {
    ...TicketFields
  }
}

mutation UpdateTicket($id: uuid!, $input: tickets_set_input!) {
  update_tickets_by_pk(pk_columns: { id: $id }, _set: $input) {
    ...TicketFields
  }
}

query GetTicketById($id: uuid!) {
  tickets(where: { id: { _eq: $id } }) {
    ...TicketFields
  }
}

# Ticket logs
mutation InsertLog($input: ticket_logs_insert_input!) {
  insert_ticket_logs_one(object: $input) {
    ...TicketLog
  } 
}

mutation UpdateLog($id: uuid!, $input: ticket_logs_set_input!) {
  update_ticket_logs_by_pk(pk_columns: {id: $id}, _set: $input) {
    ...TicketLog
  }
}

mutation DeleteLog($id: uuid!) {
  delete_ticket_logs_by_pk(id: $id) {
    id
  }
}

# FRAGMENTS

fragment TicketFields on tickets {
  id
  created_at
  updated_at
  project_id
  status
  description
  reporter: userByReporterId {
    ...UserShortFields
  }
  assignee: user {
    ...UserShortFields
  }
  logs: ticket_logs {
    ...TicketLog
  }
}

fragment TicketLog on ticket_logs {
  id
  created_at
  updated_at
  description
  ticket_id
  user {
    ...UserShortFields
  }
}
